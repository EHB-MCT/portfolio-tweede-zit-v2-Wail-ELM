name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: npm
        cache-dependency-path: package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Check Docker Compose version
      run: docker compose --version

    - name: Set up Docker and run tests
      run: |
        docker compose -f docker-compose.test.yml up --build -d
        sleep 10 # wait for services to be ready
        docker exec -e NODE_ENV=test -e DB_HOST=db_test -e DB_NAME=forum -e DB_USER=postgres -e DB_PASSWORD=play-play app_test bash -c "npx knex migrate:latest --env test && npm test"
        docker compose -f docker-compose-test.yml down --volumes
      env:
        ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}

    - name: Build Docker image
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/portfolio-tweede-zit-v2-wail-elm-app_dev .

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Push Docker image to Docker Hub
      run: docker push ${{ secrets.DOCKER_USERNAME }}/portfolio-tweede-zit-v2-wail-elm-app_dev

    - name: Log out from Docker Hub
      run: docker logout

    - name: Lighthouse CI
      run: |
        npm install -g @lhci/cli@0.7.x
        lhci autorun
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.ACCESS_TOKEN_SECRET }}
