name: CI/CD Pipleline 

on:
  push:
    branches: [ main ] 

env: 
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: play-play
  POSTGRES_DB: forum
  DB_HOST: db_test
  NODE_ENV: test
  ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}

jobs:

  test:
    runs-on: ubuntu-latest
    services:
      db_test:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: play-play
          POSTGRES_DB: forum
        options: > 
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install Dependencies
        run: npm install

      - name: Build Docker Containers
        run: docker-compose -f docker-compose.test.yml build

      - name: Run Docker Containers and Execute Tests
        run: |
          echo --- Running test cases ---
          docker-compose -f docker-compose.test.yml up --abort-on-container-exit --exit-code-from app_test
          docker-compose -f docker-compose.test.yml down
          echo --- Completed test cases ---

  build:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Build Docker Image
        run: docker-compose -f docker-compose.yml build
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Push Docker Image to Docker Hub
        run: docker-compose -f docker-compose.yml push

  lighthouse:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Lighthouse CI
        run: |
          npm install -g @lhci/cli@0.7.x
          lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.ACCESS_TOKEN_SECRET }}
